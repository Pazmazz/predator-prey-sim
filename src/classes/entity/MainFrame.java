package classes.entity;

// update
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.File;
import javax.imageio.ImageIO;
import java.awt.image.BufferedImage;
import java.io.IOException;

public class MainFrame implements ActionListener {

	public MainFrame() {
		int frameWidth = 700;
		int frameHeight = 700;
		// Main frame
		JFrame frame = new JFrame("Predator Prey Simulation");
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setSize(frameWidth, frameHeight);
		frame.setLayout(new BorderLayout());
		frame.setResizable(false);

		// Title panel with Label
		JPanel title_panel = new JPanel();
		JLabel textfield = new JLabel();

		frame.getContentPane().setBackground(new Color(50, 50, 50));

		frame.setVisible(true);

		textfield.setBackground(new Color(25, 25, 25));
		textfield.setForeground(new Color(25, 255, 0));
		textfield.setFont(new Font("Courier New", Font.BOLD, 40));
		textfield.setHorizontalAlignment(JLabel.CENTER);
		textfield.setText("Predator Prey Simulation");
		textfield.setOpaque(true);

		title_panel.setLayout(new BorderLayout());
		title_panel.setPreferredSize(new Dimension(760, 60));
		title_panel.add(textfield, BorderLayout.CENTER);

		// Bottom panel with Label
		JButton[] buttons = new JButton[3];
		JPanel bottom_panel = new JPanel();
		JLabel textfield2 = new JLabel();

		frame.getContentPane().setBackground(new Color(50, 50, 50));

		frame.setVisible(true);
		bottom_panel.setPreferredSize(new Dimension(760, 50));
		;
		textfield2.setBackground(new Color(25, 25, 25));
		textfield2.setForeground(new Color(25, 255, 0));
		// textfield2.setFont(new Font("Courier New",Font.BOLD,40));
		// textfield2.setHorizontalAlignment(JLabel.CENTER);
		// textfield2.setText("Bottom Pannel");
		// textfield2.setOpaque(true);

		// bottom_panel.setLayout(new BorderLayout());
		// bottom_panel.setPreferredSize(new Dimension(760, 60));;
		// bottom_panel.add(textfield2, BorderLayout.CENTER);
		bottom_panel.setLayout(new GridLayout(1, 3));
		bottom_panel.setBackground(new Color(25, 25, 25));

		for (int i = 0; i < 3; i++) {
			buttons[i] = new JButton();
			if (i == 0) {
				buttons[i].setText("â–·");
			}
			if (i == 1) {
				buttons[i].setText("I>");
			}
			if (i == 2) {
				buttons[i].setText("I>I");
			}
			bottom_panel.add(buttons[i]);
			buttons[i].setFont(new Font("MV Boli", Font.BOLD, 40));
			buttons[i].setFocusable(false);
			buttons[i].addActionListener(this);
			buttons[i].setBackground(new Color(25, 25, 25));
			buttons[i].setForeground(new Color(25, 255, 0));

		}
		// Grid
		JPanel gridPanel = new JPanel();

		gridPanel.setLayout(new GridLayout(20, 20, 0, 0));
		gridPanel.setPreferredSize(new Dimension(760, 760));

		for (int i = 0; i < 20; i++) {
			for (int j = 0; j < 20; j++) {
				try {
					BufferedImage image = ImageIO.read(new File("src/Assets/gridcell.jpg"));
					ImageIcon icon = new ImageIcon(image);
					// Scaling image
					Image scaledImage = icon.getImage().getScaledInstance(38, 38, Image.SCALE_SMOOTH);
					ImageIcon scaledIcon = new ImageIcon(scaledImage);

					JLabel label = new JLabel(scaledIcon);
					label.setPreferredSize(new Dimension(38, 38));
					gridPanel.add(label);

				} catch (IOException e) {
					JLabel emptyLabel = new JLabel();
					emptyLabel.setPreferredSize(new Dimension(38, 38));
					emptyLabel.setBorder(BorderFactory.createLineBorder(Color.BLACK));
					gridPanel.add(emptyLabel);
					e.printStackTrace();
				}
			}
		}
		// Wraping grid in a container panel
		JPanel gridWrapper = new JPanel();
		gridWrapper.setLayout(new FlowLayout(FlowLayout.CENTER, 0, 0));
		gridWrapper.setPreferredSize(new Dimension(760, 760));
		gridWrapper.add(gridPanel);

		// Add panels to frame
		frame.add(title_panel, BorderLayout.NORTH);
		frame.add(bottom_panel, BorderLayout.SOUTH);
		frame.add(gridPanel, BorderLayout.CENTER);

		// frame.pack();// adjusts frame size to fit components
		frame.setLocationRelativeTo(null);
		frame.setVisible(true);

	}

	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO AutoGenerated method stub
	}

}
